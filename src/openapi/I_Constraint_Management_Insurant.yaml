openapi: 3.0.1
info:
  title: I_Constraint_Management_Insurant
  description: |
    This interface provides access to the service **Constraint Management** of a personal health 
    record for insurants and representatives.<br/>
    
    **General conditions**:</br> 
    For all operations if applicable:
    - a section _Client_ in operation descriptions covers recommendations (informative) for clients.
    - a section _Provider_ in operation descriptions covers requirements for the server side. 
    - error responses may be extended by helpful information about the error condition in _errorDetail_

    **Prerequisites**:</br>
    The Health Record System shall provide 
    - name
    - role ((profession-)oid)
    - identifier (telematik-id or kvnr)
    - indication of a valid entitlement 
    
    of the current user (requestor) for evaluation in operations.

    Operations mandating a valid entitlement implicitly mandate use of a VAU-channel
    and a valid ID-Token. If one of these conditions is not met, then the response
    of the (aborted) operation shall always be '403': 'notEntitled'. 

    **Retry interval**:</br>
    The following retry intervals are suggested in case of an error response:<br>
    - '409' Conflict (statusMismatch).
      - approx. 24 hours
    - '500' Internal Error
      - approx. 10 minutes

    **User Agent**:</br>
    The user agent information (x-useragent) is part of any request, even if 
    not essentially required for the operation (e.g. raw-data collection), and
    may be considered for provider internal use. 

    **Log-Entries**
    Whenever a _Postcondition_ mandates a log-entry, this entry shall contain
    data as defined in A_24887*.

  contact:
    name: gematik GmbH
    email: epa@gematik.de
    url: 'http://www.gematik.de'

  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'

  version: 1.1.4

  # version history:
  # ----------------
  # version 1.1.4
  #   - added childsrecord category
  # version 1.1.3
  #   - bugfix UserAgentType
  # version 1.1.2
  #   - changed http-statuscode in description of operation setDenyPolicyAssignment to 201
  # version 1.1.1
  #   - bugfix: removed additionalProperties from schemas
  #   - added category 'transcripts' and 'diga' to category enum
  # version 1.1.0
  #   - removed user-specific deny policy
  #   - corrections for categoryId in enum and description
  #   - corrections in examples
  # version 1.0.0
  #   - first release version
  # version 0.0.1
  #   - initial version for review

servers:
  - url: https://epa-hst1.prod.epa4all.de

tags:
  - name: ConstraintManagement
    description: |
      Constraint Management allow to configure the general deny policiy of a health record by 
      setting or deleting constraints (assignments of the deny policy).</br>
      An assignment may be related to a single document, a folder or a category. Any document affected
      by an assigment will be hidden to any user of the deny policy affected user roles.</br>
      
      The assignments of the deny policies hide documents for the XDS Document Service only. Assignments 
      related to folders or categories hide all contained documents (not the folder / category)

      **Allowed user groups/ roles**:</br> 
      The general deny policy affects the following user groups (roles) for each assignment.
      The following list of oids is for information only and may be incomplete, the normative 
      requirement is defined in A_24306-*
      - oid_praxis_arzt
      - oid_krankenhaus
      - oid_institution-vorsorge-reha
      - oid_zahnarztpraxis
      - oid_Ã¶ffentliche_apotheke
      - oid_praxis_psychotherapeut
      - oid_institution-pflege
      - oid_institution-geburtshilfe
      - oid_praxis-physiotherapeut
      - oid_institution-oegd
      - oid_institution-arbeitsmedizin
      - oid_diga

      **Restricted categories and folders**:</br>
      Some categories/folders of a health record may contain MIOs or structured documents represented by more 
      than one XDS document (document collections, e.g. category _vaccination_). Hiding single documents 
      of such MIOs or structured documents would take the contained information out of context. This should 
      be avoided, thus hiding single documents is not supported in this case.</br>
      The following list shows categories with this restriction and is for information only and 
      may be incomplete. The normative requirement to avoid hiding of single documents applies
      for any folder with type = "uniform" or "mixed" (see 
      src/implementation_guides on GitHub/gematik/api-epa).
      
      - dental
      - child
      - pregnancy_childbirth
      - vaccination

      **Exceptions**
      The category "emp" can not be hidden by assignments of the general deny policy. 
      The participation in the electronic medical process is managed by consent decisions only. 
      This applies also for single documents of this category.
      
      **Remarks**:</br>
      - Assignments for the General Deny Policy may also be applied internally
      by the XDS document service after evaluation of confidentialityCode metadata 
      in a document provide operation.
      - Assignments of the policies are deleted internally in case a referenced _document_
      or folder is deleted from the document management.

paths:
  /epa/xds-document/api/v1/constraints:
    parameters:
      - $ref: '#/components/parameters/insurantid'
      - $ref: '#/components/parameters/useragent'
    get:
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/for'
        - $ref: '#/components/parameters/categories'
        - $ref: '#/components/parameters/documents'
        - $ref: '#/components/parameters/folders'
      tags:
        - ConstraintManagement
      operationId: getDenyPolicyAssignments
      summary: (getDenyPolicyAssignments) get a list of actual set deny policy assignments
      description: |
        Get a combined list of actual set assignments of the general deny policy.</br>  
        This operation is limited to entitled users of role oid_versicherter.
        
        **Client**:</br>
        A client shall consider the schema for 'Queries' and 'Paging' (see below).

        **Provider**:</br>
        The returned list shall contain only assignments matching the query parameters of the 
        general deny policy.</br>

        Paging:</br>
        _offset_ and _limit_ parameters shall be related to the amount of assignments matching the query and only occur 
        once in a request. Default shall be for _offset_ = 0 and for _limit_ = 50 (this shall also be the maximum _limit_).
        The applied _offset_ and _limit_ and the total amount of matching assignments shall be part of the response.</br>
        _offset_ shall be a "page-offset" and is related to _limit_ which is the "page-size", e.g. if total amount of 
        matching assignments is 75, than _offset_ = 0 with _limit_ = 40 return result 1 to 40 and _offset_ = 1 with _limit_ 
        = 40 return result 41 to 75 and _offset_ = 2 with _limit_ = 40 return an 'empty' result.  
        
        Queries:</br>
        Different query parameters (name) shall be applied as logical AND, multiple query strings (same name) 
        as OR. Default for all query parameters is ("*").
        Queries for _folders_ shall use urn.encoded uuids (use urn:uuid:65e2a7a3-b46f-40f4-b821-4efc23a57400 instead 
        of 65e2a7a3-b46f-40f4-b821-4efc23a57400).</br>
        Queries for _documents_ shall use identifiers matching the referenceId schema 
        'uniqueID^^^^urn:gematik:iti:xds:2023:rootDocumentUniqueId' ('uniqueId' equals also the documentEntry.uniqueId (a uuid)). 

        | Conditions | Status code | Error code | Remarks |
        |------------|-------------|------------|---------|
        | Successful operation | 200 |||
        | Request does not match schema | 400 | malformedRequest ||
        | Requestor has no valid entitlement | 403 | notEntitled ||
        | Requestor role is not _oid_versicherter_ | 403 | invalidOid ||
        | Health record does not exist | 404 | noHealthRecord | _insurantid_ unknown |
        | Health record is not in state ACTIVATED | 409 | statusMismatch | (see 'Retry interval') |
        | Any other error | 500 | internalError | (see 'Retry interval') |

         </br>
        | Postconditions                        | Remarks |
        |---------------------------------------|---------|
        | none ||

      responses:
        '200':
          description: Ok. Returns a list of policy assignments
          content:
            application/json:
              schema:
                type: object
                properties:
                  query:
                    type: object
                    properties:
                      offset:
                        description: applied offset to matching results
                        type: integer
                      limit:
                        description: applied limit to matching results
                        type: integer
                      totalMatching:
                        description: total amount of matching results in policies
                        type: integer
                  data:
                    type: array
                    items:
                      allOf:
                      - $ref: '#/components/schemas/DenyPolicyAssignmentResponseType'
              examples:
                getAll:
                  $ref: '#/components/examples/Get_AllPolicyAssignments'
                FilterCategory:
                  $ref: '#/components/examples/Get_QueryForCategory'
        '400':
          $ref: '#/components/responses/Error400BadRequest'
        '403':
          $ref: '#/components/responses/Error403Forbidden'
        '404':
          $ref: "#/components/responses/Error404NotFound"
        '409':
          $ref: '#/components/responses/Error409Conflict'
        '500':
          $ref: '#/components/responses/Error500InternalError'

    post:
      tags:
        - ConstraintManagement
      operationId: setDenyPolicyAssignment
      summary: (setDenyPolicyAssignment) set a new deny policy assignment
      description: |
        Set a new assignment for the general deny policy.</br>
        This operation is limited to entitled users of role oid_versicherter.

        **Client**:</br>
        A client shall set assignments for existing resources only.</br>
        A client shall set assignments _folder_ for dynamic folders only (static 
        folders are assigned via _category_ only).</br> 
        A client shall not set assignments _document_ for a restricted category/folder.
        A client shall set assignments for content of the XDS document service only.

        **Provider**:</br>
        A new assignment shall use:</br>
        - a _category_ entry addressed by a technical identifier string (e.g. 'vaccination'), or</br>
        - a _folder_ entry addressed by folder.EntryUUID (urn-encoded uuid), or</br>
        - a _document_ entry addressed by an identifier 'uniqueID^^^^urn:gematik:iti:xds:2023:rootDocumentUniqueId' as 
        used in documentEntry.referenceIdList with 'uniqueId' the symbolic uuid of documentEntry.uniqueID.

        The category "emp" shall not be hidden, neither shall single documents of this category be hidden.
        Assignment requests for this category or documents of this category shall be rejected.

        Each new valid assigment shall be extended by a uuid (assignmentId) for identification
        by the server. This uuid shall be unique in context of deny policies for the health record.

        | Conditions | Status code | Error code | Remarks |
        |------------|-------------|------------|---------|
        | Successful operation | 201 |||
        | Request does not match schema | 400 | malformedRequest ||
        | Requestor has no valid entitlement | 403 | notEntitled ||
        | Requestor role is not _oid_versicherter_ | 403 | invalidOid ||
        | The addressed category is "emp"| 403 | invalidResource ||
        | The addressed document is part of category "emp"| 403 | invalidResource ||
        | Health record does not exist | 404 | noHealthRecord | _insurantid_ unknown |
        | Addressed _document_ or _folder_ does not exist | 404 | noResource ||
        | Health record is not in state ACTIVATED | 409 | statusMismatch | (see 'Retry interval') |
        | An addressed _folder_ is not of type _dynamic_ | 409 | requestMismatch ||
        | An addressed _document_ is part of a restricted category or folder | 409 | requestMismatch ||
        | An addressed _category_ is not part of the XDS Document Service | 409 | requestMismatch ||
        | The assignment does yet exist | 409 | requestMismatch | avoid duplicates ||
        | Any other error | 500 | internalError | (see 'Retry interval') |

         </br>
        | Postconditions                        | Remarks |
        |---------------------------------------|---------|
        | The policy assignment is extended with the assignmentId and stored in SecureDataStorage ||
        | A log-entry for the operation exists | all operation results |
        | The raw-data of the operation is collected and associated to _useragent_ | for any operation result according to gemSpec_PerfUC_B4.x |

      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/DenyPolicyAssignmentType'
            examples:
              GDPolicyAssignmentForCategories:
                $ref: '#/components/examples/Add_category_to_general_deny_policy'
              GDPolicyAssignmentForDocuments:
                $ref: '#/components/examples/Add_document_to_general_deny_policy'
              GDPolicyAssignmentForFolders:
                $ref: '#/components/examples/Add_folder_to_general_deny_policy'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DenyPolicyAssignmentResponseType'
              examples:
                GDPolicyAssignmentForCategories:
                  $ref: '#/components/examples/Response_category_to_general_deny_policy'
                GDPolicyAssignmentForDocuments:
                  $ref: '#/components/examples/Response_document_to_general_deny_policy'
                GDPolicyAssignmentForFolders:
                  $ref: '#/components/examples/Response_folder_to_general_deny_policy'
        '400':
          $ref: '#/components/responses/Error400BadRequest'
        '403':
          $ref: '#/components/responses/Error403Forbidden'
        '404':
          $ref: '#/components/responses/Error404NotFound'
        '409':
          $ref: '#/components/responses/Error409Conflict'
        '500':
          $ref: '#/components/responses/Error500InternalError'

  /epa/xds-document/api/v1/constraints/{assignmentId}:
    parameters:
      - $ref: '#/components/parameters/insurantid'
      - $ref: '#/components/parameters/assignmentId'
      - $ref: '#/components/parameters/useragent'
    delete:
      tags:
        - ConstraintManagement
      operationId: deleteDenyPolicyAssignment
      summary: (deleteDenyPolicyAssignment) delete a specific deny policy assignment
      description: |
        Delete one existing assignment of the general deny policy.</br>
        This operation is limited to entitled users of role oid_versicherter.

        **Client**:</br>
        no recommendations.

        **Provider**:</br>
        | Conditions | Status code | Error code | Remarks |
        |------------|-------------|------------|---------|
        | Successful operation | 204 |||
        | Request does not match schema | 400 | malformedRequest ||
        | Requestor has no valid entitlement | 403 | notEntitled ||
        | Requestor role is not _oid_versicherter_ | 403 | invalidOid ||
        | Health record does not exist | 404 | noHealthRecord | _insurantid_ unknown |
        | Assignment (_assignmentid_) does not exist | 404 | noResource ||
        | Health record is not in state ACTIVATED | 409 | statusMismatch | (see 'Retry interval') |
        | Any other error | 500 | internalError | (see 'Retry interval') |

         </br>
        | Postconditions                        | Remarks |
        |---------------------------------------|---------|
        | The addressed assignment is removed from the general deny policy ||
        | A log-entry for the operation exists | all operation results |

      responses:
        '204':
          description: OK. Assignment deleted
        '400':
          $ref: '#/components/responses/Error400BadRequest'
        '403':
          $ref: '#/components/responses/Error403Forbidden'
        '404':
          $ref: '#/components/responses/Error404NotFound'
        '409':
          $ref: '#/components/responses/Error409Conflict'
        '500':
          $ref: '#/components/responses/Error500InternalError'

components:
  responses:
    Error400BadRequest:
      description: Bad Request.
      content:
        application/json:
          example:
            errorCode: malformedRequest
          schema:
            $ref: '#/components/schemas/ErrorType'
    Error403Forbidden:
      description: Forbidden.
      content:
        application/json:
          example:
            errorCode: notEntitled
          schema:
            $ref: '#/components/schemas/ErrorType'
    Error404NotFound:
      description: Not found.
      content:
        application/json:
          example:
            errorCode: noResource
          schema:
            $ref: '#/components/schemas/ErrorType'
    Error409Conflict:
      description: Conflict.
      content:
        application/json:
          examples:
            statusMismatch:
              value:
                errorCode: statusMismatch
            requestMismatch:
              value:
                errorCode: requestMismatch
          schema:
            $ref: '#/components/schemas/ErrorType'
    Error500InternalError:
      description: Internal Server Error
      content:
        application/json:
          example:
            errorCode: internalError
          schema:
            $ref: '#/components/schemas/ErrorType'

  parameters:
    insurantid:
      name: x-insurantid
      in: header
      description: Health Record Identifier.
      required: true
      schema:
        $ref: '#/components/schemas/InsurantIdType'
    useragent:
      name: x-useragent
      in: header
      description: user agent information
      required: true
      schema:
        $ref: '#/components/schemas/UserAgentType'
    assignmentId:
      name: assignmentId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AssignmentIdType'
    limit:
      name: limit
      in: query
      description: Limits the number of matching items in a response ('pagesize', default and max = 50).
      schema:
        type: integer
        maximum: 50
        minimum: 1
    offset:
      name: offset
      in: query
      description: Specifies skipped matching pages ('pagesize' == limit), (default = 0).
      schema:
        type: integer
    for:
      name: for
      in: query
      description: Query for deny policy assignments hiding categories or documents or folders
      schema:
        $ref: '#/components/schemas/ForType'
    categories:
      name: parameters.categoryId
      in: query
      description: Query for deny policy assignment hiding a specific category.
      schema:
        $ref: '#/components/schemas/CategoryIdType'
    documents:
      name: parameters.rootDocumentId
      in: query
      description: Query for deny policy assignment hiding a specific document.
      schema:
        $ref: '#/components/schemas/RootDocumentIdType'
    folders:
      name: parameters.folderUUID
      in: query
      description: Query for deny policy assignment hiding a specific folder.
      schema:
        $ref: '#/components/schemas/UuidType'
  schemas:
    AssignmentIdType:
      description: Server-assigned unique uuid of a particular deny policy assignment
      type: string
      format: uuid
      example: fa2bc929-f6c9-419f-ae75-cea040927651
    ForType:
      description: Select an assignment type
      type: string
      enum:
        - category
        - document
        - folder
      example: category
    UuidType:
      description: An urn-encoded UUID
      type: string
      example: urn:uuid:4fa70820-2384-4001-80a9-7bbd5e085efb
    RootDocumentIdType:
      description: |
        A CXi style identifier with schema 'uniqueID^^^^urn:gematik:iti:xds:2023:rootDocumentUniqueId' with symbolic UUID as uniqueId
      type: string
      example: 4fa70820-2384-4001-80a9-7bbd5e085efb^^^^urn:gematik:iti:xds:2023:rootDocumentUniqueId
    CategoryIdType:
      description: A technical identifier of a category
      type: string
      enum:
        - reports
        - emergency
        - eab
        - dental
        - child
        - childsrecord
        - pregnancy_childbirth
        - vaccination
        - patient
        - receipt
        - diga
        - care
        - eau
        - rehab
        - transcripts
        - other
      example: emergency
    DenyPolicyAssignmentType:
      description: Basic type for a deny policy assignments.
      oneOf:
        - $ref: '#/components/schemas/GDPolicyAssignmentForDocumentType'
        - $ref: '#/components/schemas/GDPolicyAssignmentForFolderType'
        - $ref: '#/components/schemas/GDPolicyAssignmentForCategoryType'
    DenyPolicyAssignmentResponseType:
      description: Basic type for a deny policy response.
      allOf:
        - type: object
          properties:
            assignmentId:
              allOf:
                - $ref: '#/components/schemas/AssignmentIdType'
        - oneOf:
            - $ref: '#/components/schemas/GDPolicyAssignmentForDocumentType'
            - $ref: '#/components/schemas/GDPolicyAssignmentForFolderType'
            - $ref: '#/components/schemas/GDPolicyAssignmentForCategoryType'
    GDPolicyAssignmentForCategoryType:
      description: Global deny policy assigment for a single category.
      type: object
      properties:
        for:
          type: string
          enum:
            - category
        parameters:
          type: object
          required:
            - categoryId
          properties:
            categoryId:
              allOf:
                - $ref: '#/components/schemas/CategoryIdType'
              description: technical identifier of category
    GDPolicyAssignmentForDocumentType:
      description: Global deny policy assigment for a single document.
      type: object
      properties:
        for:
          type: string
          enum:
            - document
        parameters:
          type: object
          required:
            - rootDocumentId
          properties:
            rootDocumentId:
              allOf:
                - $ref: '#/components/schemas/RootDocumentIdType'
              description: rootDocumentUniqueId from DocumentEntry.referenceIdList
    GDPolicyAssignmentForFolderType:
      description: Global deny policy assigment for a single folder.
      type: object
      properties:
        for:
          type: string
          enum:
            - folder
        parameters:
          type: object
          required:
            - folderUUID
          properties:
            folderUUID:
              allOf:
                - $ref: '#/components/schemas/UuidType'
              description: Folder.entryUUID
    UserAgentType:
      description: "Information about client software with: ClientId (1 to 20 characters) + / + VersionNumber (1 to 15 characters)."
      type: string
      pattern: '^[a-zA-Z0-9\-]{1,20}\/[a-zA-Z0-9\-\.]{1,15}$'
      example: CLIENTID1234567890AB/2.1.12-45
    InsurantIdType:
      type: string
      description: |-
        The health record identifier. 
        For today the record identifier equals the insurant id (kvnr).
      pattern: '^[A-Z]{1}\d{9}$'
      example: Z123456789
    ErrorType:
      description: Error object with additional information about the occurred error
      type: object
      properties:
        errorCode:
          description: Error condition specifier
          type: string
        errorDetail:
          description: Additional details regarding the error condition (if applicable)
          type: string
      required:
        - errorCode

  examples:
    Add_category_to_general_deny_policy:
      summary: Set an assigment for a category in General Deny Policy
      value:
        for: category
        parameters:
          categoryId: patient
    Response_category_to_general_deny_policy:
      summary: Response of assigment for a category in General Deny Policy
      value:
        assignmentId: ddf19ee6-e831-430d-893f-71d219ac12a0
        for: category
        parameters:
          categoryId: patient
    Add_document_to_general_deny_policy:
      summary: Set an assigment for a document in General Deny Policy
      value:
        for: document
        parameters:
          rootDocumentId: 0f70653d-d5f4-46f0-99e1-b6af92eea2b6^^^^urn:gematik:iti:xds:2023:rootDocumentUniqueId
    Response_document_to_general_deny_policy:
      summary: Response of assigment for a document in General Deny Policy
      value:
        assignmentId: b4593ccc-e29e-47b0-89fc-1ee80df188aa
        for: document
        parameters:
          rootDocumentId: 0f70653d-d5f4-46f0-99e1-b6af92eea2b6^^^^urn:gematik:iti:xds:2023:rootDocumentUniqueId
    Add_folder_to_general_deny_policy:
      summary: Set an assigment for a folder in General Deny Policy
      value:
        for: folder
        parameters:
          folderUUID: urn:uuid:84d92a96-3585-4ad3-94b1-c4f3dbe87176
    Response_folder_to_general_deny_policy:
      summary: Response of assigment for a folder in General Deny Policy
      value:
        assignmentId: 8130eafa-a4fa-4337-aedb-6019b66e48f3
        for: folder
        parameters:
          folderUUID: urn:uuid:84d92a96-3585-4ad3-94b1-c4f3dbe87176
    Get_AllPolicyAssignments:
      summary: Get all Deny Policy assignments.
      value:
        query:
          offset: 0
          limit: 50
          totalMatching: 6
        data:
          - assignmentId: ddf19ee6-e831-430d-893f-71d219ac12a0
            for: category
            parameters:
              categoryId: patient
          - assignmentId: b4593ccc-e29e-47b0-89fc-1ee80df188aa
            for: document
            parameters:
              rootDocumentId: 0f70653d-d5f4-46f0-99e1-b6af92eea2b6^^^^urn:gematik:iti:xds:2023:rootDocumentUniqueId
          - assignmentId: 8130eafa-a4fa-4337-aedb-6019b66e48f3
            for: folder
            parameters:
              folderUUID: urn:uuid:84d92a96-3585-4ad3-94b1-c4f3dbe87176
          - assignmentId: 21694fb0-3019-4824-a34e-d4e1c031470e
            for: category
            parameters:
              categoryId: dental
          - assignmentId: 74343201-e669-4675-8414-3ce517220a3b
            for: document
            parameters:
              rootDocumentId: c4e17b20-ecee-4261-a51d-396b8e81bc27^^^^urn:gematik:iti:xds:2023:rootDocumentUniqueId
          - assignmentId: 7730578d-9380-47d6-ae82-d2c47ca399af
            for: folder
            parameters:
              folderUUID: urn:uuid:f9929ed6-1119-4dea-a48a-1cfe8117f7b7
    Get_QueryForCategory:
      summary: Get all Deny Policy assignments for category dental.
      value:
        query:
          offset: 0
          limit: 50
          totalMatching: 1
        data:
          - assignmentId: 21694fb0-3019-4824-a34e-d4e1c031470e
            for: category
            parameters:
              categoryId: dental
